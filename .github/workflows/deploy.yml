name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        DB_URI: ${{ secrets.DB_URI }} # Ensure DB_URI is explicitly passed to env
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key

        TARGET_DIR="/opt/genhands-backend"
        GIT_REPO_URL="https://github.com/${{ github.repository }}.git"

        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i private_key $SERVER_USER@$SERVER_HOST "sudo mkdir -p $TARGET_DIR && sudo chown $SERVER_USER:$SERVER_USER $TARGET_DIR"

        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i private_key $SERVER_USER@$SERVER_HOST << EOF
          set -e
          cd "$TARGET_DIR"

          echo "Current directory: $(pwd)"
          echo "Current user: $(whoami)"

          if [ ! -d ".git" ]; then
            echo "Cloning repository..."
            git clone --depth 1 --branch main "$GIT_REPO_URL" .
          else
            echo "Pulling latest changes..."
            git checkout main
            git fetch origin main
            git reset --hard origin/main
          fi

          echo "Creating .env file..."
          printf "NODE_ENV=production\n" > .env
          printf "PORT=3000\n" >> .env
          printf "MONGODB_URI='%s'\n" "$DB_URI" >> .env

          echo ".env file created."
          ls -l .env

          echo "Running docker-compose commands..."
          sudo docker-compose down
          sudo docker-compose build --no-cache
          sudo docker-compose up -d

          echo "Deployment script finished."
        EOF
